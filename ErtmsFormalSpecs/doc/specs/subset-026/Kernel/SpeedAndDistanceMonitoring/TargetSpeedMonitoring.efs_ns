<NameSpace
 X="150"
 Width="100"
 Height="50"
 Name="TargetSpeedMonitoring"
 Guid="cec82dde-4045-4785-a20d-9c2abe607506"
>
<NameSpaces>
<NameSpaceRef
 Name="SupervisionStatus"
 Guid="84e1d314-47ad-4b92-9302-e2f9c5fcc279"
>
</NameSpaceRef></NameSpaces>
<Structures>
<Structure
 Default=""
 X="180"
 Y="120"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Target"
 Guid="865a3683-bb23-4dc3-bad6-3c9736df8945"
>
<ReqRef
 Id="7bd72bb5-368f-4b82-82c7-aa311cc5f660"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3dd56d31-d853-4199-97b4-4131ad0b9682"
>
</ReqRef><Comment>Structure defining a target: provides the start location, the maximum speed and the length over which the speed restriction takes effect.</Comment>
<StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Location"
 Guid="88225cf3-e583-44c0-a7f6-549db0535f7b"
>
<Comment>Start location of the target, measured from the LRBG reference location.</Comment>
</StructureElement><StructureElement
 TypeName="Default.BaseTypes.Speed"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Speed"
 Guid="b11369ec-bacd-41aa-908d-ce2d06353482"
>
<Comment>Speed restriction btween (Location) and (Location + Length)</Comment>
</StructureElement><StructureElement
 TypeName="Default.BaseTypes.Length"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Length"
 Guid="356de4a2-3e92-44b2-b72b-958de1aac294"
>
<Comment>Length of the target</Comment>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Target"
 MaxSize="100"
 Default="[]"
 Y="120"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Targets"
 Guid="b733d87f-dc21-4dab-9e13-5bd163b900e0"
>
<ReqRef
 Id="c7a43456-5326-4c4d-b89f-23b71a0240bf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7467c00d-368c-4bd4-952f-b51ddf6093bb"
>
</ReqRef><Comment>Collection of targets</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="Default.BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="600"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_SBI2"
 Guid="9adc8b34-1349-4001-9841-1dc58a51e7fa"
>
<ReqRef
 Id="88d50002-b123-41cd-8621-3ac7ae0408ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18eccf58-4bba-482d-a51e-33e42b6052c3"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a97bd283-7b7f-46c6-a7f6-c8a1eaa7658a"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e8dc6574-0fa6-4d93-a9c1-a77717adb7b0"
>
</ReqRef><Comment>Provides the distance d_SBI2.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
 Guid="ef4e3d67-de48-4bd6-bc1c-dee6ea188efb"
>
</Parameter><Parameter
 Type="Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Target"
 Name="aTarget"
 Guid="fda9571d-8f47-429b-99a5-c0d911da3501"
>
</Parameter><Parameter
 Type="Boolean"
 Name="EstimatedAccelerationSetToZero"
 Guid="f3b01b30-3b40-47e7-bcec-6ea52e210ccc"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="EBIvalue unknown"
 Guid="6caabc93-dfe4-42b6-845e-3a05d61c3524"
>
<PreConditions>
<PreCondition
 Guid="a9d4c728-e23f-4e83-884d-b41a5a7f7494"
>EBIvalue ( Vest =&gt; Vest, aTarget =&gt; aTarget, EstimatedAccelerationSetToZero =&gt; EstimatedAccelerationSetToZero ) == Default.BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>Default.BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Value"
 Guid="fd21b39b-f325-40fa-a78d-5ff23258542b"
>
<Expression>EBIvalue ( Vest =&gt; Vest, aTarget =&gt; aTarget, EstimatedAccelerationSetToZero =&gt; EstimatedAccelerationSetToZero )  - BaseTypes.SpeedToMS ( Vest ) * T_bs2</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="380"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_EBI"
 Guid="70924901-cff4-4895-b502-d0dc03e91af4"
>
<ReqRef
 Id="4edb2d35-ece8-4f2a-b28e-83eec4565ce4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="383c4f07-e250-41e3-a660-52a2e713c8bf"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6c04d565-c302-4f16-9424-6d49becc9ee7"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a04e2676-4676-4e30-9b0f-597415e50899"
>
</ReqRef><ReqRef
 Id="a387bd06-4306-436c-ae73-a3faa509f059"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b97e8baf-2816-40e9-81ee-c44ea05b97c7"
>
</ReqRef><Comment>Provides the location of the EBI supervision limit.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
 Guid="5eef95c0-266d-4452-9c08-920bc4be143f"
>
</Parameter><Parameter
 Type="Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Target"
 Name="aTarget"
 Guid="75aff4e1-bc80-4c0c-ae1b-cd01e124a020"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Release speed"
 Guid="f861860a-db19-489d-b147-5173feb7b3a0"
>
<PreConditions>
<PreCondition
 Guid="e21e5249-9a0e-4300-92e7-262b91c17598"
>ReleaseSpeedMonitoring.ReleaseSpeedSupervisionApplicable ( aTarget )</PreCondition><PreCondition
 Guid="afbb53f6-839f-4368-8e93-2501f82a48f1"
>TargetSpeedMonitoring.EBIvalue ( Vest =&gt; Vest, aTarget =&gt; aTarget, EstimatedAccelerationSetToZero =&gt; False ) &gt;= ReleaseSpeedMonitoring.StartRSM ( ReleaseSpeedMonitoring.ReleaseSpeed )</PreCondition></PreConditions>
<Expression>ReleaseSpeedMonitoring.StartRSM ( ReleaseSpeedMonitoring.ReleaseSpeed )</Expression>
</Case><Case
 Name="Value"
 Guid="1ef44712-63ce-42dc-8422-66cfdb895afb"
>
<Expression>EBIvalue ( Vest =&gt; Vest, aTarget =&gt; aTarget, EstimatedAccelerationSetToZero =&gt; False )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Default=""
 X="110"
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Vsbi2"
 Guid="9eee0499-6300-469b-bb17-4162898ff2c5"
>
<ReqRef
 Id="5222ef04-36ae-4dc3-a10f-a31139e5b7ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bdda436e-37f8-4975-8276-04a0f256af53"
>
</ReqRef><Comment>Provides the SBI2 speed for the estimated train front end, for display purpose only.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Dmaxsafefrontend"
 Guid="3cc56ab9-cd50-4bcd-a28a-ce08a5d1992d"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vtarget"
 Guid="8443afba-91bf-4019-a2da-f85044de80c5"
>
</Parameter><Parameter
 Type="Boolean"
 Name="EstimatedAccelerationSetToZero"
 Guid="0f25fef4-61f0-4fea-8268-a95c3e39b69b"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="EBD behind Dmaxsafefrontend"
 Guid="56d1a168-ba05-42f1-892e-04934c9d544b"
>
<PreConditions>
<PreCondition
 Guid="0d079f8d-23af-45e8-883b-25f7de1f76d3"
>DecelerationCurves.EBDForSpeed(Vtarget) == Default.BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>Vtarget + CeilingSpeedMonitoring.dV_sbi(Vtarget)</Expression>
</Case><Case
 Name="After EBD(Vtarget)"
 Guid="4284e6e0-7eb5-4a62-8c8f-0cbc28530501"
>
<PreConditions>
<PreCondition
 Guid="af655905-681c-467c-8a8c-2b474bb03a43"
>Dmaxsafefrontend + Default.BaseTypes.SpeedToMS(Odometry.TrainSpeed() ) * T_bs2 + DecelerationCurves.Dbe_display ( Vest =&gt; Odometry.TrainSpeed(), EstimatedAccelerationSetToZero =&gt; EstimatedAccelerationSetToZero )
 &gt; 
DecelerationCurves.EBDForSpeed(Vtarget)</PreCondition></PreConditions>
<Expression>Vtarget + CeilingSpeedMonitoring.dV_sbi(Vtarget)</Expression>
</Case><Case
 Name="Before EBD(Vtarget)"
 Guid="98ddd973-1247-4b2e-a164-ff0954d53d7e"
>
<Expression>Default.BaseTypes.MaxSpeed(
X1=&gt; DecelerationCurves.EBD ( Dmaxsafefrontend + Default.BaseTypes.SpeedToMS(Odometry.TrainSpeed() ) * T_bs2 + DecelerationCurves.Dbe_display ( Vest =&gt; Odometry.TrainSpeed(), EstimatedAccelerationSetToZero =&gt; EstimatedAccelerationSetToZero ) ) - (DecelerationCurves.Vdelta0() + DecelerationCurves.Vdelta1(EstimatedAccelerationSetToZero) + DecelerationCurves.Vdelta2(EstimatedAccelerationSetToZero)),
X2=&gt; Vtarget + CeilingSpeedMonitoring.dV_sbi(Vtarget)
)</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Vsbi1"
 Guid="e657ee32-0530-42e6-ae03-e5bdcbca6165"
>
<ReqRef
 Id="678f7208-b36d-410b-8e62-028a110b3c70"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1574bed5-6e12-4e9a-9365-55c902798b81"
>
</ReqRef><Comment>Provides the SBI1 speed for the estimated train front end, for display purpose only.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Destfront"
 Guid="09ed4c58-e9a7-4b17-a5c6-530136032e82"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Before EOA"
 Guid="d4be67a0-0946-485f-9fe2-e631a9aabcfd"
>
<PreConditions>
<PreCondition
 Guid="bde98596-9ac7-46ec-90e4-42cd4ac651a0"
>Destfront + BaseTypes.SpeedToMS(Odometry.TrainSpeed() ) * T_bs1 &lt; MA.ClosestEOA().Location</PreCondition></PreConditions>
<Expression>DecelerationCurves.SBD ( Destfront + BaseTypes.SpeedToMS(Odometry.TrainSpeed() ) * T_bs1 )</Expression>
</Case><Case
 Name="After EOA"
 Guid="f573b2a7-2c7b-41d0-b632-c6954262beea"
>
<Expression>0.0</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="600"
 Y="160"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_SBI2_MREBDT"
 Guid="fdbf32ad-9c1a-414c-9d9f-a855f9b3ce5f"
>
<ReqRef
 Id="faa860d4-6ec0-42c7-921a-65ae72f044ad"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d4c3746-0919-44e4-9a49-c3bc668fcde9"
>
</ReqRef><Comment>Provides the SBI distance, calculated from the EBD curve, taken from the most restrictive target amongst the EBD based targets.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
 Guid="90356ed0-f9a4-427a-aabb-661c5b7c9ae7"
>
</Parameter><Parameter
 Type="Boolean"
 Name="EstimatedAccelerationSetToZero"
 Guid="4b24f1f4-29bb-4b17-89e4-0976cb1beb13"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Vest below all the supervised target speeds"
 Guid="30e99670-6938-4ffe-8626-22edbca60e82"
>
<PreConditions>
<PreCondition
 Guid="f3765bd0-74d9-4a3a-8931-9cd8e64befb5"
>FORALL X IN EBDTargetsList() | d_SBI2 ( Vest =&gt; Vest, aTarget =&gt; X, EstimatedAccelerationSetToZero =&gt; EstimatedAccelerationSetToZero ) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Value"
 Guid="673e0526-d664-4d47-ac36-3e9fd64b13fc"
>
<Expression>REDUCE
EBDTargetsList() | X.Speed &lt;= Vest
USING X IN
    BaseTypes.MinDistance ( X1 =&gt; d_SBI2 ( Vest =&gt; Vest, aTarget =&gt; X, EstimatedAccelerationSetToZero =&gt; EstimatedAccelerationSetToZero ), X2 =&gt; RESULT )
INITIAL_VALUE
    Default.BaseTypes.Distance.Infinity</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Default=""
 X="220"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="V_P_EOA"
 Guid="e53bbfb6-f615-4220-bf4a-53900602d192"
>
<ReqRef
 Id="fdddd187-528c-44e6-9583-2900e0e2afca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a1b68fb9-3c03-4dcc-9d61-e272b5f98a3a"
>
</ReqRef><ReqRef
 Id="8b2366a5-38e0-4885-836f-fdcbbf43e1b8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="95a223bd-f060-420b-9ed5-7c2d3e655c0d"
>
</ReqRef><ReqRef
 Id="4a6a5396-38cf-4784-bd94-ba5c844bb58c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89de16fc-bf66-4440-934b-7a1fe5007c54"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2418807b-78a2-4374-81b5-839321ac053f"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2a87d0d2-6795-4a7e-975f-4da7407478f4"
>
</ReqRef><Comment>The permitted speed of an EOA target, as used in the calculation of the MRDT.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="d_estfront"
 Guid="8e0a7656-cae6-4169-9913-594f836cb945"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
 Guid="b53b2821-ad3b-4e56-b39c-37df100eba8b"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="GUI is inhibited, first case"
 Guid="bd651fd3-7709-4de5-bb0c-c3abea4c233e"
>
<PreConditions>
<PreCondition
 Guid="3b40019d-ded4-4c90-874f-5655ba662c14"
>d_estfront + BaseTypes.SpeedToMS(Vest) * ( T_driver + T_bs1 ) &lt; MA.ClosestEOA().Location</PreCondition><PreCondition
 Guid="8b332ee1-e275-4c1d-b11c-5aaaf0880d71"
>NOT NationalValues.ComputationOfGUIIsEnabled ()</PreCondition></PreConditions>
<Expression>DecelerationCurves.SBD_Target(
    Distance =&gt; d_estfront + BaseTypes.SpeedToMS(Vest) * ( T_driver + T_bs1),
    aTarget =&gt; MA.ClosestEOA()
)</Expression>
</Case><Case
 Name="GUI is enabled, first case"
 Guid="0c8c1aab-75c3-4d07-b159-af8a7433a06f"
>
<PreConditions>
<PreCondition
 Guid="25a8c888-2fbe-4c82-aeed-91f3341c0a3d"
>NationalValues.ComputationOfGUIIsEnabled ()</PreCondition><PreCondition
 Guid="ae292cb2-e670-4c12-9ec0-b9244a86f5d1"
>d_estfront + BaseTypes.SpeedToMS(Vest) * ( T_driver + T_bs1 ) &lt; MA.ClosestEOA().Location</PreCondition></PreConditions>
<Expression>BaseTypes.MinSpeed(
    X1 =&gt; DecelerationCurves.SBD_Target(
        Distance =&gt; d_estfront + BaseTypes.SpeedToMS(Vest) * ( T_driver + T_bs1 ),
        aTarget =&gt; MA.ClosestEOA() ),
    X2 =&gt; DecelerationCurves.GUI_Target(
        Distance =&gt; d_estfront,
        aTarget =&gt; MA.ClosestEOA() )
)</Expression>
</Case><Case
 Name="Second case"
 Guid="e154f4c7-5452-4307-a281-82156ab1a210"
>
<Expression>0.0</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Default=""
 X="110"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="V_P_EBD_Target"
 Guid="32777de1-dcc5-4e84-a87d-fc7c53f5ef17"
>
<ReqRef
 Id="07eb8e7a-b28f-4fcc-96e6-2042d5ca7980"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3814f8f2-3c72-4d97-bf84-c4047ba2e853"
>
</ReqRef><ReqRef
 Id="18ac7a51-42e7-45d9-b16c-290a09782304"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40f5a6c7-ba1c-4cf7-a46d-01817ab2e98b"
>
</ReqRef><ReqRef
 Id="4a6a5396-38cf-4784-bd94-ba5c844bb58c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d226611-d671-4df7-944d-eddc7efb6366"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4a29dbfc-d8a9-4af8-9fd7-7b10eddeacbb"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6ce518f2-328d-4a52-a04f-a3b5b596fdfc"
>
</ReqRef><Comment>The permitted speed as used in the calculation of the MRDT.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="d_maxsafefront"
 Guid="9d0d9740-70a0-4e00-91b9-22507eb04f5c"
>
</Parameter><Parameter
 Type="Target"
 Name="aTarget"
 Guid="66a7c1ee-0117-4b52-a235-d68da4f21e6f"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
 Guid="bbc0930b-32a4-4df4-abed-036218611ac2"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Target at infinity"
 Guid="ed2ebbeb-2af3-489a-a72c-7b2f96841d05"
>
<PreConditions>
<PreCondition
 Guid="d165fa9a-e604-4ec9-8859-de6ede874796"
>aTarget.Location == BaseTypes.Distance.Infinity</PreCondition></PreConditions>
<Expression>BaseTypes.Speed.Infinity</Expression>
</Case><Case
 Name="GUI is inhibited, first case"
 Guid="1bf856e8-dee1-44b0-a1a6-bd4d7ac34525"
>
<PreConditions>
<PreCondition
 Guid="7b9f6890-4be7-49cf-9750-bc2b6d56cfb4"
>d_maxsafefront + BaseTypes.SpeedToMS(Vest) * ( T_driver + T_bs2 ) + DecelerationCurves.Dbe_display( Vest =&gt; Vest, EstimatedAccelerationSetToZero=&gt;False)
  &lt;  
DecelerationCurves.EBD_TargetForSpeed(
    Vest =&gt; aTarget.Speed,
    aTarget =&gt; aTarget,
    EstimatedAccelerationSetToZero =&gt; False )</PreCondition><PreCondition
 Guid="2784bf61-3ed4-4bb9-ba3c-cfa74d731b58"
>NOT NationalValues.ComputationOfGUIIsEnabled ()</PreCondition></PreConditions>
<Expression>BaseTypes.MaxSpeed(
    X1 =&gt; DecelerationCurves.EBD_Target(
    Distance =&gt; d_maxsafefront + BaseTypes.SpeedToMS(Vest)*(T_driver + T_bs2) + DecelerationCurves.Dbe_display( Vest =&gt; Vest , EstimatedAccelerationSetToZero =&gt; False ),
    aTarget =&gt; aTarget
) - ( DecelerationCurves.Vdelta0() + DecelerationCurves.Vdelta1(False) + DecelerationCurves.Vdelta2(False)),
    X2 =&gt; aTarget.Speed
)</Expression>
</Case><Case
 Name="GUI is enabled, first case"
 Guid="ea008d5f-1c70-4000-a4d1-1f59f4575794"
>
<PreConditions>
<PreCondition
 Guid="0eca90da-8457-4dee-9fe8-edd31394c8f9"
>NationalValues.ComputationOfGUIIsEnabled ()</PreCondition><PreCondition
 Guid="b6dbd2ec-7f55-4672-b4b9-9c4635a43455"
>d_maxsafefront + BaseTypes.SpeedToMS(Vest) * ( T_driver + T_bs2 ) + DecelerationCurves.Dbe_display ( Vest =&gt; Vest, EstimatedAccelerationSetToZero =&gt; False )
  &lt;
DecelerationCurves.EBD_TargetForSpeed(
    Vest =&gt; aTarget.Speed,
    aTarget =&gt; aTarget,
    EstimatedAccelerationSetToZero =&gt; False )</PreCondition><PreCondition
 Guid="d74cbcd2-5d36-4d92-ac09-52e9c8b2c16a"
>d_maxsafefront &lt; DistanceForSpeed(
    Function =&gt; FUNCTION d : BaseTypes.Distance =&gt; DecelerationCurves.GUI_Target(
        Distance =&gt; d,
        aTarget =&gt; aTarget ),
    Speed =&gt; aTarget.Speed
)</PreCondition></PreConditions>
<Expression>BaseTypes.MaxSpeed(
X1 =&gt; BaseTypes.MinSpeed(
    X1 =&gt; DecelerationCurves.EBD_Target(
        Distance =&gt; d_maxsafefront 
              + BaseTypes.SpeedToMS(Vest) * ( T_driver + T_bs2 )
              + DecelerationCurves.Dbe_display ( Vest =&gt; Vest, EstimatedAccelerationSetToZero =&gt; False ),
        aTarget =&gt; aTarget )
          - ( DecelerationCurves.Vdelta0() + DecelerationCurves.Vdelta1(False) + DecelerationCurves.Vdelta2(False) ),
    X2 =&gt; DecelerationCurves.GUI_Target(
        Distance =&gt; d_maxsafefront,
        aTarget =&gt; aTarget )
    ),
X2 =&gt; aTarget.Speed
)</Expression>
</Case><Case
 Name="Second case"
 Guid="37ee1eee-2b68-457d-9e98-2a3cf3de4ae6"
>
<Expression>aTarget.Speed</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="V_P_MRDT"
 Guid="1e4dbe7f-a6a6-4336-bbfb-3e05f6fb09a5"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e23e205e-c96d-4701-8d67-907847c9d5e3"
>
</ReqRef><Comment>The permitted speed of the MRDT.</Comment>
<Cases>
<Case
 Name="MRDT is the EOA"
 Guid="da50275f-a949-4fe9-b3ab-e1285e86eb11"
>
<PreConditions>
<PreCondition
 Guid="178905dd-ce63-4fba-8a0b-3c4f22c9b159"
>MA.IsEOA(SupervisedTarget())</PreCondition></PreConditions>
<Expression>V_P_EOA(d_estfront=&gt;TrainPosition.FrontEndPosition(DistanceInterval.Nom), Vest=&gt;Odometry.TrainSpeed())</Expression>
</Case><Case
 Name="Otherwise"
 Guid="ce69f6f0-25b3-421d-b722-f59a85591ca8"
>
<Expression>V_P_EBD_Target(
    d_maxsafefront =&gt; TrainPosition.FrontEndPosition(DistanceInterval.Max),
    aTarget =&gt; SupervisedTarget(),
    Vest =&gt; Odometry.TrainSpeed()
)</Expression>
</Case></Cases>
</Function><Function
 Type="Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Target"
 Cacheable="TRUE"
 Default=""
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SupervisedTarget"
 Guid="c23acb47-fdeb-4b58-b3df-fdf995401020"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ded4780e-f8f3-459f-92ea-6561b63cdeaf"
>
</ReqRef><Comment>Returns the most restrictive displayed target, the target for which the permitted speed (determined from the target location and the calculated braking curves) is smallest at the train&apos;s current position.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="c3a48f3d-32bb-44b9-bad0-fd7ac0c82bb3"
>
<Expression>REDUCE
    TargetsList()
USING X IN
    MinTarget ( X1 =&gt; X, X2 =&gt; RESULT )
INITIAL_VALUE
    MA.ClosestEOA()</Expression>
</Case></Cases>
</Function><Function
 Type="Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Target"
 Default=""
 X="110"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MinTarget"
 Guid="a78639d3-3001-473f-97a6-b4b96c1da340"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="307235e7-d376-4f8b-8f05-ecc74bf353ed"
>
</ReqRef><Comment>Returns the closer target between the two parameters</Comment>
<Parameters>
<Parameter
 Type="Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Target"
 Name="X1"
 Guid="99b4f72a-6815-4d7e-8399-67569b67864b"
>
</Parameter><Parameter
 Type="Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Target"
 Name="X2"
 Guid="03f9e4e0-748a-4af5-91fc-184584ea00dc"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="X1 is EOA, X1 &lt;= X2"
 Guid="d7e9b455-b41a-43f6-bdb8-7860333b85d8"
>
<PreConditions>
<PreCondition
 Guid="010a5d7a-5196-490a-935f-b9bdadea48cd"
>MA.IsEOA ( X1 )</PreCondition><PreCondition
 Guid="77b343e7-476b-45bc-a3b8-04498de86352"
>V_P_EOA(
    d_estfront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Nom ),
    Vest =&gt; Odometry.TrainSpeed() )
 &lt;= 
V_P_EBD_Target(
    d_maxsafefront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Max ),
    aTarget =&gt; X2,
    Vest =&gt; Odometry.TrainSpeed() )</PreCondition></PreConditions>
<Expression>X1</Expression>
</Case><Case
 Name="X1 is EOA, X1 &gt; X2"
 Guid="5a0347ec-403a-4a99-9f8e-10a2c3c10564"
>
<PreConditions>
<PreCondition
 Guid="629c9b91-b7fc-48ae-b00b-bddfcdf136c5"
>MA.IsEOA ( X1 )</PreCondition></PreConditions>
<Expression>X2</Expression>
</Case><Case
 Name="X2 is EOA, X1 &lt;= X2"
 Guid="4140569e-9bf3-4d06-bc80-25e5915de36d"
>
<PreConditions>
<PreCondition
 Guid="d6d8640e-d60e-43ab-822d-adfba05c1520"
>MA.IsEOA ( X2 )</PreCondition><PreCondition
 Guid="ce6619c4-cc2d-40cd-8daf-925648001d58"
>V_P_EBD_Target(
    d_maxsafefront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Max ),
    aTarget =&gt; X1,
    Vest =&gt; Odometry.TrainSpeed() )
 &lt;= 
V_P_EOA(
    d_estfront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Nom ),
    Vest =&gt; Odometry.TrainSpeed() )</PreCondition></PreConditions>
<Expression>X1</Expression>
</Case><Case
 Name="X2 is EOA, X1 &gt; X2"
 Guid="1e5f8cfb-a642-431b-96c5-0a1ef8fb4c2a"
>
<PreConditions>
<PreCondition
 Guid="88082aba-1861-4c61-8572-9c6fa224bb8b"
>MA.IsEOA ( X2 )</PreCondition></PreConditions>
<Expression>X2</Expression>
</Case><Case
 Name="X1 &lt;= X2"
 Guid="c57b0e3f-56ef-418d-bdc5-4f4e1a9b6adf"
>
<PreConditions>
<PreCondition
 Guid="2e2cb67d-e986-47dd-9a32-d34ea033b11a"
>V_P_EBD_Target(
    d_maxsafefront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Max ),
    aTarget =&gt; X1,
    Vest =&gt; Odometry.TrainSpeed() )
  &lt;=
V_P_EBD_Target(
    d_maxsafefront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Max ),
    aTarget =&gt; X2,
    Vest =&gt; Odometry.TrainSpeed() )</PreCondition></PreConditions>
<Expression>X1</Expression>
</Case><Case
 Name="Otherwise"
 Guid="35cbb373-54b4-4f1c-9886-0fe496087890"
>
<Expression>X2</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="420"
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="V_P_DMI"
 Guid="9d863556-7e7d-42b2-994a-447321c65271"
>
<ReqRef
 Id="74e64307-2966-461e-a976-9a0194ca8514"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="71de75da-dda1-4585-8b17-667aeea13130"
>
</ReqRef><Comment>The permitted speed as reported to the driver (through the DMI).</Comment>
<Cases>
<Case
 Name="Value"
 Guid="3b2124db-7a45-4f5d-b030-095438388390"
>
<Expression>BaseTypes.MinSpeed(
    X1 =&gt; V_P_MRDT(),
    X2 =&gt; MRSP.V_MRSP()
)</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="310"
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="V_SBI_DMI"
 Guid="e7fb5746-f019-4849-8e26-45b0825554d0"
>
<ReqRef
 Id="eb90e9d9-f130-4725-b447-bd6e474f0c8b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ccf64606-46a3-4aca-bef8-4c8a8e53505c"
>
</ReqRef><Comment>The most restrictive SBI speed as reported to the driver.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="20305c0b-b18d-4d3b-b937-1488474eccf8"
>
<Expression>BaseTypes.MinSpeed
(
  X1 =&gt; BaseTypes.MinSpeed(

    X1 =&gt; BaseTypes.MaxSpeed(
      X1 =&gt; Vsbi1(TrainPosition.FrontEndPosition(DistanceInterval.Nom)),
      X2 =&gt; ReleaseSpeedMonitoring.ReleaseSpeed),

    X2 =&gt; BaseTypes.MaxSpeed(
      X1 =&gt; Vsbi2_SvL( TrainPosition.FrontEndPosition(DistanceInterval.Max) )
      X2 =&gt; ReleaseSpeedMonitoring.ReleaseSpeed)
    ),

  X2 =&gt; BaseTypes.MinSpeed(

    X1 =&gt; Vsbi2(
        Dmaxsafefrontend=&gt;TrainPosition.FrontEndPosition(DistanceInterval.Max),
        Vtarget=&gt;SupervisedTarget().Speed,
        EstimatedAccelerationSetToZero=&gt;False),
    X2 =&gt; MRSP.V_MRSP() + CeilingSpeedMonitoring.dV_sbi ( MRSP.V_MRSP() )
    )
)</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="490"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_SBI1"
 Guid="ff23d7c3-131e-4650-a009-eeb08d75daee"
>
<ReqRef
 Id="977790a8-3eb7-4baf-a99c-78291edbfcd3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ecc861e-01b3-4bb3-bcd1-9c617da7ad85"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f29217a7-c46a-4791-b91d-2ab797f2a9ab"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="457a8338-aa65-4170-80a5-cf6b17328492"
>
</ReqRef><ReqRef
 Id="faa860d4-6ec0-42c7-921a-65ae72f044ad"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="de210259-fad0-4a65-a00d-855ce3b4c3ed"
>
</ReqRef><ReqRef
 Id="6d961621-89b1-4280-8bd7-11d37e4b3f6c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c766457-1116-4b85-830b-02452e9051ea"
>
</ReqRef><Comment>Provides the distance d_SBI1.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
 Guid="62759084-4403-4c1c-b5ee-224fba41c002"
>
</Parameter><Parameter
 Type="Boolean"
 Name="EstimatedAccelerationSetToZero"
 Guid="861e2a6e-bbd2-4460-b6b8-f53a1d2f9a0c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No SBD"
 Guid="6633ad72-15a7-48d6-9009-484c09973fb6"
>
<PreConditions>
<PreCondition
 Guid="8ccbaeff-7580-487f-bed3-10470968e535"
>DecelerationCurves.SBD(
    Distance=&gt; TrainPosition.FrontEndPosition(
    PointOfInterest=&gt;Default.DistanceInterval.Nom
)) == Default.BaseTypes.Speed.NA</PreCondition></PreConditions>
<Expression>Default.BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="SBD below Vest"
 Guid="c7b0d6a3-6808-4360-8991-791ced8b7632"
>
<PreConditions>
<PreCondition
 Guid="9e1abeb5-4d09-483c-8f53-24d85fe1e9da"
>DistanceForSpeed(
    Function=&gt; DecelerationCurves.SBD,
    Speed=&gt; Vest
) == Default.BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>Default.BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Value"
 Guid="38aef605-7d44-466d-a6ca-9d9140f030b8"
>
<Expression>DistanceForSpeed ( Function =&gt; DecelerationCurves.SBD, Speed =&gt; Vest )  - Default.BaseTypes.SpeedToMS ( Vest ) * T_bs1</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="600"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_I"
 Guid="04b0e355-ce9e-4713-b048-1d187f455a95"
>
<ReqRef
 Id="9d47bdf0-6549-4af1-8d8a-a36c0d505ec3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="626bfb9b-6070-43cd-a4c8-4d3f45326e0f"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="20edc06d-cf41-406a-80a3-13f7a5960d8a"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4d3f5aca-65f5-4e6c-8850-8b2ce04d79b5"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c9e3472-8615-4dec-a6df-ca8ff4a65310"
>
</ReqRef><ReqRef
 Id="b10067eb-6ad7-4c8c-9aab-ef1740ef0e13"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3bf9e65e-8343-4e8d-b3ad-45ba28019117"
>
</ReqRef><Comment>Provide the distance d_I.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
 Guid="915bcb8e-511c-42f9-b9d9-cdc0925f0c5b"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Below P"
 Guid="ac470df6-405d-48ad-9cb2-a8db544d6e46"
>
<PreConditions>
<PreCondition
 Guid="b4b68ec6-cf44-41c5-b78d-2b39ad896f98"
>Vest &lt;= CeilingSpeedMonitoring.P ( InterventionValue ( Vest ) )
  OR  
d_P(Vest, False) == BaseTypes.Distance.Infinity</PreCondition></PreConditions>
<Expression>InterventionValue ( Vest )</Expression>
</Case><Case
 Name="Above P"
 Guid="877d9731-6bca-451c-84b9-8f9445c63e6d"
>
<Expression>IntersectAt ( FunctionA =&gt; CeilingSpeedMonitoring.P, FunctionB =&gt; InterventionValue )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="380"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_P"
 Guid="0606aabb-af6c-453f-9aee-2d0d0819c67f"
>
<ReqRef
 Id="10386bb3-4703-4007-bc8f-0d0904eb986f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7cd70be-d5e8-4df5-8bee-8667aefd5497"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4b9417d3-cbd3-4d90-86f9-31aff1d1633b"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1d3cc71b-8da9-4758-afc3-e28c65bd9df0"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="85dd09da-3bb0-444c-9c12-68404f4fcd19"
>
</ReqRef><ReqRef
 Id="2c11a715-c52a-4168-b8fb-64484d1fd6d5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="52d2d9d2-2610-41f6-b713-3d948f282d57"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="527ec1ff-97c8-433c-a532-28a0f58bc38b"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c02d6320-3a99-457f-843e-92d85d7673f1"
>
</ReqRef><ReqRef
 Id="4a6a5396-38cf-4784-bd94-ba5c844bb58c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5122854e-3d17-40d6-9541-124e78420d91"
>
</ReqRef><Comment>Provide the distance d_P.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
 Guid="b0ddad8a-03b6-45df-acfa-70519d5c72c0"
>
</Parameter><Parameter
 Type="Boolean"
 Name="EstimatedAccelerationSetToZero"
 Guid="83551c0f-01b9-41a3-85d4-28028c0d6894"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Target is EOA, SBI1 unknown"
 Guid="d252b6d9-d7d8-4066-9fe4-35a95c6f25f8"
>
<PreConditions>
<PreCondition
 Guid="8a9bb99e-e31d-4a5b-b950-a5d567a162f2"
>d_SBI1(Vest, EstimatedAccelerationSetToZero) == BaseTypes.Distance.Unknown</PreCondition><PreCondition
 Guid="cf597bcc-a37d-44c6-89af-62f6770a89cb"
>MA.IsEOA(SupervisedTarget())</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Infinity</Expression>
</Case><Case
 Name="EBD based target, distance unknown"
 Guid="ed76b401-c261-4369-afc2-9eac91c9d698"
>
<PreConditions>
<PreCondition
 Guid="4e23c2e8-5e27-4f47-b33a-cda6e1b051fc"
>EBDTargetsList() != []

  AND  

d_SBI2_MREBDT(Vest, EstimatedAccelerationSetToZero) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Infinity</Expression>
</Case><Case
 Name="GUI inhibited, target is EOA"
 Guid="bc1cd155-ba13-42c9-ad91-23841c16a0d6"
>
<PreConditions>
<PreCondition
 Guid="70659c39-2759-4cb5-b0d4-fd30a601fc38"
>NOT NationalValues.ComputationOfGUIIsEnabled()</PreCondition><PreCondition
 Guid="3bec59ce-8eb8-400e-9082-c1c388aff52b"
>MA.IsEOA(SupervisedTarget())</PreCondition></PreConditions>
<Expression>d_SBI1(Vest, EstimatedAccelerationSetToZero) - Default.BaseTypes.SpeedToMS ( Vest ) * T_driver</Expression>
</Case><Case
 Name="GUI inhibited, EBD based target"
 Guid="67ad0b11-b263-492d-9c49-9312340e4b07"
>
<PreConditions>
<PreCondition
 Guid="83e9d303-ca77-4dae-9723-1116a0bcd743"
>NOT NationalValues.ComputationOfGUIIsEnabled()</PreCondition></PreConditions>
<Expression>d_SBI2_MREBDT(Vest, EstimatedAccelerationSetToZero) - Default.BaseTypes.SpeedToMS ( Vest ) * T_driver</Expression>
</Case><Case
 Name="GUI enabled, target is EOA"
 Guid="a2617cac-24b8-462a-b50f-024412f2faa6"
>
<PreConditions>
<PreCondition
 Guid="a7bc345d-8d50-4c6a-8832-5dd65bdf1241"
>MA.IsEOA(SupervisedTarget())</PreCondition></PreConditions>
<Expression>Default.BaseTypes.MinDistance (
    X1 =&gt; d_SBI1 ( Vest, EstimatedAccelerationSetToZero ) - Default.BaseTypes.SpeedToMS ( Vest ) * T_driver,
    X2 =&gt; DistanceForSpeed ( Function =&gt; DecelerationCurves.GUI, Speed =&gt; Vest ) )</Expression>
</Case><Case
 Name="GUI enabled, EBD based target"
 Guid="1d474c90-b426-47ae-9aa9-f0992244d9b7"
>
<Expression>Default.BaseTypes.MinDistance (
    X1 =&gt; d_SBI2_MREBDT ( Vest, EstimatedAccelerationSetToZero ) - Default.BaseTypes.SpeedToMS ( Vest ) * T_driver,
    X2 =&gt; DistanceForSpeed ( Function =&gt; DecelerationCurves.GUI, Speed =&gt; Vest ) )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="490"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_W"
 Guid="0ee7721f-a288-498b-8262-14d7025c07ac"
>
<ReqRef
 Id="489ea7da-1016-4fd4-8a89-0ce129ff23a5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1206c647-42cd-452b-b995-fce4061bf055"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7d917f8-0587-4d68-9bd7-828934f8c90b"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e191b376-c940-4485-800a-ee1f77d1b2a4"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed9d7a91-02c5-415c-9fa1-39e235020479"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bbb6775e-8b13-465b-a2fa-f1ccce521c69"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b600af38-89b2-4e8a-83ef-f8b6efabc4f3"
>
</ReqRef><Comment>Provide the distance d_W.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
 Guid="3388cfb7-6f33-483f-bff4-8a173a1775fa"
>
</Parameter><Parameter
 Type="Boolean"
 Name="EstimatedAccelerationSetToZero"
 Guid="473a1c9b-1cdd-4a8d-9619-e307d2a462db"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Supervised target is the EOA"
 Guid="38379bd3-9c98-460e-ae6a-6e0ad0dae502"
>
<PreConditions>
<PreCondition
 Guid="f00aced6-9aec-41aa-ba5c-a1f314c5c26c"
>MA.IsEOA(SupervisedTarget())</PreCondition></PreConditions>
<Expression>d_SBI1(Vest,EstimatedAccelerationSetToZero) - BaseTypes.SpeedToMS ( Vest ) * T_warning</Expression>
</Case><Case
 Name="Supervised target is an EBD based target"
 Guid="1fdc7a88-028a-4814-b78c-5309fb73739c"
>
<Expression>d_SBI2_MREBDT(Vest,EstimatedAccelerationSetToZero) - BaseTypes.SpeedToMS ( Vest ) * T_warning</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="600"
 Y="350"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="InterventionValue"
 Guid="d5766119-e66c-4e9e-8d2a-2334fc12fd9e"
>
<ReqRef
 Id="9d47bdf0-6549-4af1-8d8a-a36c0d505ec3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6c8f1f29-0284-4bf8-8607-b73cf6da6603"
>
</ReqRef><Comment>Provides the location corresponding to the intervention location for the provided speed.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="V"
 Guid="7fc15dfb-aba7-4285-9126-e258ace2c074"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="d216bbc6-a6ca-42c4-bba6-68c13b80c42c"
>
<Expression>d_P ( V, False ) - BaseTypes.SpeedToMS ( V ) * DecelerationCurves.T_indication ()</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Default=""
 X="490"
 Y="350"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="EBIvalue"
 Guid="67e0983b-e9ca-4a28-85d3-89dd78057c88"
>
<ReqRef
 Id="faa860d4-6ec0-42c7-921a-65ae72f044ad"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4316e654-30de-4e18-99a9-d124517c3cf8"
>
</ReqRef><ReqRef
 Id="0e91b525-553f-4f68-8970-8bed83e88948"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="30ffd978-0025-4805-8727-4144d8e3927e"
>
</ReqRef><ReqRef
 Id="7d29645c-18cf-4661-9edb-e3fcb091bc29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c3f0c650-057a-43ec-85d8-8a0df7113e4d"
>
</ReqRef><Comment>Returns the closest distance at which the EBI value is equal to a provided speed (calculated from Vest and aTarget.Speed).</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
 Guid="d1a8330c-ead3-4993-b78a-39e9eef5f008"
>
</Parameter><Parameter
 Type="Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Target"
 Name="aTarget"
 Guid="c9becbd7-3eaf-4f49-9887-db0a41cbd161"
>
</Parameter><Parameter
 Type="Boolean"
 Name="EstimatedAccelerationSetToZero"
 Guid="71e6f052-cda0-4e9a-a84c-f3124a6b9a5a"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Unknown for given speed"
 Guid="68852627-8a59-4a40-863f-f157164677e2"
>
<PreConditions>
<PreCondition
 Guid="b5f767c0-d69b-47fb-910e-58b4f9b0ec0b"
>aTarget.Location == BaseTypes.Distance.Infinity
  OR  
DecelerationCurves.EBD_TargetForSpeed(aTarget=&gt;aTarget, Vest=&gt;Vest, EstimatedAccelerationSetToZero=&gt;EstimatedAccelerationSetToZero) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Value"
 Guid="f6c71c64-a1ed-4e52-9eee-68edbd4d2eb7"
>
<Expression>DecelerationCurves.EBD_TargetForSpeed(
    aTarget=&gt;aTarget,
    Vest=&gt;Vest,
    EstimatedAccelerationSetToZero=&gt;EstimatedAccelerationSetToZero
) - DecelerationCurves.Dbec (
    Vest =&gt; Vest,
    Vtarget =&gt; aTarget.Speed,
    EstimatedAccelerationSetToZero =&gt; EstimatedAccelerationSetToZero 
)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="710"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SBI1BelowSBI2"
 Guid="4c03af12-8299-47f1-a36e-5ceafe500d01"
>
<ReqRef
 Id="7525f72a-3b46-498c-8c48-1ed3ad888b1a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a089428b-43ef-4852-b96c-8fd5280e0e7f"
>
</ReqRef><ReqRef
 Id="d542f99e-9462-4bb6-9087-35da9a233e06"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9bb4026c-f84c-4db5-bd43-c6cc4f1a26e1"
>
</ReqRef><Comment>Checks that the MA ends with a EOA and, if so, returns true if the SBD curve is closer than the EBD</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="d_SBI1"
 Guid="dad67edd-3fe4-4175-a913-c3a4ad872b4b"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Distance"
 Name="d_SBI2"
 Guid="175339e3-7d3f-4c7b-b400-62a0f1c45654"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No EOA defined"
 Guid="68dd7cc9-0d1c-45c8-bc0c-958e6b369768"
>
<PreConditions>
<PreCondition
 Guid="1f71df51-c1b0-48e4-a4f9-a4588272738b"
>NOT MA.EOADefined()</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Value"
 Guid="8bdc9210-c59d-4c1b-9357-b46432397840"
>
<Expression>d_SBI1 - TrainPosition.FrontEndPosition(DistanceInterval.Nom)
 &lt;= 
d_SBI2 - TrainPosition.FrontEndPosition(DistanceInterval.Max)</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="220"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TargetDistance"
 Guid="e8c7c99b-8bfa-48ab-be05-e479c99d4026"
>
<ReqRef
 Id="a80d2a3c-74bd-4a69-b199-4dead00ff0d2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ab563e9-065d-4edd-9bf5-5619441c34a8"
>
</ReqRef><ReqRef
 Id="77b648ad-7252-476f-be13-f85e426e8f12"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8df358b0-8c8c-4ec8-befd-2f3d05e9e64e"
>
</ReqRef><ReqRef
 Id="c5c3fd28-41ac-4ad2-a5ea-ba3e63205382"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e1650ea1-6c4f-4465-b880-51632e1acd06"
>
</ReqRef><Comment>Provides the distance to the MRDT. the calculation of this distance depends on whether the MRDT is EOA/SvL or another type of target.</Comment>
<Cases>
<Case
 Name="MRDT is EOA or SvL"
 Guid="82194262-9ba2-4fde-8a4d-317280711763"
>
<PreConditions>
<PreCondition
 Guid="93e6226e-a005-4917-8b21-45a1a7127f27"
>MA.IsEOA(MRDT())
  OR  
MA.IsSvL(MRDT())</PreCondition><PreCondition
 Guid="93f3ba48-eaef-4faa-a6d8-30f0cbeb06b3"
>ActiveFunctions.SuperviseTrainSpeed_MRSP()
  OR
ActiveFunctions.SuperviseTrainSpeed_MRSP_DistInSRMode()
  OR  
ActiveFunctions.SuperviseTrainSpeed_All_Information()</PreCondition></PreConditions>
<Expression>Default.BaseTypes.MaxDistance(
    X1=&gt;Default.BaseTypes.MinDistance(
        X1 =&gt; MA.ClosestEOA().Location - TrainPosition.FrontEndPosition(Default.DistanceInterval.Nom),
        X2 =&gt; SvLDistance()
    ),
    X2=&gt;0.0
)</Expression>
</Case><Case
 Name="Train speed supervision based on MRSP"
 Guid="0ca3e6c9-dd75-4e99-834a-cff3a97950d4"
>
<PreConditions>
<PreCondition
 Guid="b20e9a55-698d-42b5-a74f-10da874697de"
>ActiveFunctions.SuperviseTrainSpeed_MRSP()
  OR
ActiveFunctions.SuperviseTrainSpeed_MRSP_DistInSRMode()
  OR  
ActiveFunctions.SuperviseTrainSpeed_All_Information()</PreCondition></PreConditions>
<Expression>Default.BaseTypes.MaxDistance(
    X1=&gt; d_P(MRDT().Speed, True)-TrainPosition.FrontEndPosition(Default.DistanceInterval.Max),
    X2=&gt;0.0
)</Expression>
</Case><Case
 Name="No train speed speed supervision"
 Guid="74e2f633-10cb-4c4b-8529-80e8551c40c3"
>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Targets"
 Cacheable="TRUE"
 Default=""
 Y="340"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="EBDTargetsList"
 Guid="080084b1-b2d0-4064-ad42-393f22dcaa17"
>
<Comment>Provides the list of EBD-based targets</Comment>
<Cases>
<Case
 Name="Value"
 Guid="432773f1-009d-4b37-a703-f1ec3389f415"
>
<Expression>MAP TARGETS(
    Targets1=&gt;MIN(First=&gt;  MRSP.SpeedRestrictions,
                  Second=&gt; NationalValues.MaxDistInSRSpeedRestriction
                  ),
    Targets2=&gt;EMPTY,
    Targets3=&gt;EMPTY
) | X.Location &gt; TrainPosition.FrontEndPosition(Default.DistanceInterval.Nom)
  USING X IN X</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="110"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Vsbi2_SvL"
 Guid="e2d8cce6-4a1e-435a-8e2b-49faa5eae4af"
>
<Comment>This function adds a layer of protection to the Vsbi2 when it is called by V_SBI_DMI.
This protection is used in the case where V_SBI_DMI is calculated but the train has no MA (the JRU can do this in SR Mode)</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Dmaxsafefrontend"
 Guid="3c8a6b79-3cf2-4c92-9799-64ee4f57ade5"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="SvL available on-board"
 Guid="d092303d-95c0-4962-b454-269f77a194ef"
>
<PreConditions>
<PreCondition
 Guid="fa3471fb-0eac-447a-9a56-daf76ea28288"
>Available (MA.SvL())</PreCondition></PreConditions>
<Expression>Vsbi2(
    Dmaxsafefrontend =&gt; Dmaxsafefrontend,
    Vtarget =&gt; MA.SvL().Speed,
    EstimatedAccelerationSetToZero =&gt; False
)</Expression>
</Case><Case
 Name="Otherwise"
 Guid="b0c08bf3-b9dc-4921-9708-0b8bf7c2e0a5"
>
<Expression>0.0</Expression>
</Case></Cases>
</Function><Function
 Type="Target"
 Default=""
 Width="100"
 Height="50"
 Name="MRDT"
 Guid="2f81894a-e876-4f5a-99fc-5f8647f5c324"
>
<Comment>Provides the Most Relevant Displayed Target</Comment>
<Cases>
<Case
 Name="Value"
 Guid="52fbd973-a249-4593-8ca6-49d343805067"
>
<Expression>STABILIZE
MaskedTarget(PREVIOUS)

 INITIAL_VALUE
SupervisedTarget()

 STOP_CONDITION
CURRENT == PREVIOUS</Expression>
</Case></Cases>
</Function><Function
 Type="Target"
 Default=""
 X="110"
 Width="100"
 Height="50"
 Name="MaskedTarget"
 Guid="30a649ab-aa1b-411a-a74b-99a291166bb6"
>
<Comment>Returns the target masked by the current MRDT with the lowest speed</Comment>
<Parameters>
<Parameter
 Type="Target"
 Name="Target"
 Guid="e4c0e9eb-d980-4f38-a2df-873185c17bd5"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="f66cf3fa-6f2c-49df-9a18-6b54b3d5eb7e"
>
<Expression>REDUCE
TargetsList() |
    X.Location &gt; Target.Location  AND  
    X.Speed &lt; Target.Speed  AND  
    d_PreInd_Target_forSpeed(
        aTarget =&gt; X,
        aSpeed =&gt; Target.Speed ) &lt; TrainPosition.FrontEndPosition(DistanceInterval.Nom)

 USING X IN
MinTargetSpeed(
    X1 =&gt; X,
    X2 =&gt; RESULT )

 INITIAL_VALUE
Target</Expression>
</Case></Cases>
</Function><Function
 Type="Target"
 Default=""
 X="220"
 Width="100"
 Height="50"
 Name="MinTargetSpeed"
 Guid="e488cea3-78da-4a16-bc06-4375b7b18da8"
>
<Comment>Returns the target with the loer speed. In case of a tie, returns the further target.</Comment>
<Parameters>
<Parameter
 Type="Target"
 Name="X1"
 Guid="8033d0c8-b4db-460e-8c64-7cf880d8ce39"
>
</Parameter><Parameter
 Type="Target"
 Name="X2"
 Guid="94dc3823-d4c9-49a1-adc3-3d70b168446e"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="X1.Speed &lt; X2.Speed"
 Guid="d39dd2f1-9f4b-4d60-b9b0-52b3f0f87678"
>
<PreConditions>
<PreCondition
 Guid="1facbb52-483b-4b5d-a00c-101577a81622"
>X1.Speed &lt; X2.Speed</PreCondition></PreConditions>
<Expression>X1</Expression>
</Case><Case
 Name="X2.Speed &gt; X1.Speed"
 Guid="2e45633c-4d36-47bf-a2a3-3bbdac067a75"
>
<PreConditions>
<PreCondition
 Guid="79963fec-8881-4d55-8610-60dba0d50631"
>X2.Speed &lt; X1.Speed</PreCondition></PreConditions>
<Expression>X2</Expression>
</Case><Case
 Name="Equal speeds, X1 is closer"
 Guid="7c52b31b-8e3b-4cbf-8843-3d98e9bc8c6b"
>
<PreConditions>
<PreCondition
 Guid="8ca02fb0-5bf9-4a59-9830-dd5206837da4"
>X1.Location &lt; X2.Location</PreCondition></PreConditions>
<Expression>X2</Expression>
</Case><Case
 Name="Equal speeds, X2 is closer"
 Guid="c165d431-8975-4fba-952b-2f57e4e491ed"
>
<Expression>X1</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SvLDistance"
 Guid="1455010c-0eb4-467d-bc96-1985d5cc05b7"
>
<Comment>Handles the case where the function call for SvL does not work.</Comment>
<Cases>
<Case
 Name="SvL available"
 Guid="f27a7401-a0d5-4d46-bc34-d7012b4d6c2d"
>
<PreConditions>
<PreCondition
 Guid="104c8194-1f31-4c18-b4a6-9f1da87c0b4b"
>Available(MA.SvL())</PreCondition></PreConditions>
<Expression>MA.SvL().Location - TrainPosition.FrontEndPosition(Default.DistanceInterval.Max)</Expression>
</Case><Case
 Name="Otherwise"
 Guid="a4044a21-12b3-43ad-a351-8d08bc843b0d"
>
<Expression>Default.BaseTypes.Distance.Infinity</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 Width="100"
 Height="50"
 Name="d_PreInd_Target_forSpeed"
 Guid="f6eadf65-b6e1-43c0-8573-4c7cef62e802"
>
<Comment>Returns the Pre-Indication location of a target for the given speed.

The Pre-Indication location is 
d_SBI - Vest * T_driver           =&gt; d_P
      - Vest * T_indication       =&gt; d_I</Comment>
<Parameters>
<Parameter
 Type="Target"
 Name="aTarget"
 Guid="f38919cf-1bc1-49dc-a01b-12b43482ae70"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="aSpeed"
 Guid="45b376f0-a5af-4268-b3e2-1734707d79f4"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Target is EOA or SvL"
 Guid="a80d4248-7a40-4c11-a4f8-a5f1d7f33989"
>
<PreConditions>
<PreCondition
 Guid="6ccc3abd-893f-4482-ae0a-f1e2fa60d2c2"
>MA.IsEOA(aTarget)
  OR  
MA.IsSvL(aTarget)</PreCondition></PreConditions>
<Expression>d_SBI1(
    Vest =&gt; aSpeed,
    EstimatedAccelerationSetToZero =&gt; True )
 - BaseTypes.SpeedToMS(aSpeed) * (T_driver + DecelerationCurves.T_indication() + PreIndicationLocation.T_preindication)</Expression>
</Case><Case
 Name="Target is an MRSP target or the LOA"
 Guid="0eb63632-9f07-4633-b2c2-77f1f56957ef"
>
<Expression>d_SBI2(
    Vest =&gt; aSpeed,
    aTarget =&gt; aTarget,
    EstimatedAccelerationSetToZero =&gt; True )
 - BaseTypes.SpeedToMS(aSpeed) * (T_driver + DecelerationCurves.T_indication() + PreIndicationLocation.T_preindication)</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="440"
 Y="120"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="InitializeTimeIntervals"
 Guid="5dc3458e-4b55-484a-973e-c7cbf3a2bae0"
>
<ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eee29c97-85ab-4802-9542-0f2a129f7e06"
>
</ReqRef><ReqRef
 Id="0da7d42d-a7f1-4b5e-bfb4-d43908e0ab43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d25ea64a-fac3-417f-a6ce-a9ffa1922f74"
>
</ReqRef><ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f0711f60-19ec-43a0-8553-56ba9cd8770c"
>
</ReqRef><Comment>Initialize the time intervals for the service brake depending of whether the feedback is available.</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InitializeTimeIntervals"
 Guid="eb53f9d2-158f-4358-8084-af8988bbfdf3"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="SBCommandAvailable_SBFeedbackNotAvailable"
 Guid="5e3ecd09-c5c3-428a-9afc-9d32efe08da5"
>
<ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c9e822c-1b6e-46ea-8601-2566e40a3bc1"
>
</ReqRef><Comment>If the feedback is not available, both the T_bs variables are given the same constant value.</Comment>
<PreConditions>
<PreCondition
 Guid="c14a5ddc-ef60-4e6e-99df-4784e3561cf5"
>TrainData.TrainData.Value.SBCommandIsImplemented</PreCondition><PreCondition
 Guid="6e82e8b9-b84f-477e-9588-10ef63c83133"
>NOT TrainData.TrainData.Value.SBFeedbackIsImplemented</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ec39334f-816b-488a-bb1e-4d56f2c8b2f2"
>T_bs1 &lt;- TrainData.BrakingParameters.T_bs()</Action><Action
 Guid="276948b7-fb73-404d-8430-160712fbc9ce"
>T_bs2 &lt;- TrainData.BrakingParameters.T_bs()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="SBCommandAvailable_SBFeedbackAvailable"
 Guid="bff0dfe2-30fa-44ef-9f34-c61122055bac"
>
<ReqRef
 Id="0da7d42d-a7f1-4b5e-bfb4-d43908e0ab43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="775dcbb3-caf7-42f9-924a-7cd5b784bd29"
>
</ReqRef><Comment>If the service brake feedback is available, the T_bs are both set to the same initial value, which will be decreased after the brakes are triggered.</Comment>
<PreConditions>
<PreCondition
 Guid="a9a8135c-652f-4435-977a-b2ca399a5d48"
>TrainData.TrainData.Value.SBCommandIsImplemented</PreCondition><PreCondition
 Guid="a472e5a3-7b3c-4a5e-a610-fb187e614c1a"
>TrainData.TrainData.Value.SBFeedbackIsImplemented</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9b28d836-1ed0-415b-9678-5c3beec361d5"
>T_bs1 &lt;- TrainData.BrakingParameters.T_bs()</Action><Action
 Guid="877d64de-96f2-4618-8ae7-988535b274d7"
>T_bs2 &lt;- TrainData.BrakingParameters.T_bs()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="SBCommandNotAvailable"
 Guid="2148a743-96cc-4e01-9647-9c28d8944e1c"
>
<ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bac524f3-c36a-4466-a08a-d0815198a43d"
>
</ReqRef><Comment>If the service brake command is not available, set the time intervals to 0 by default.</Comment>
<PreConditions>
<PreCondition
 Guid="041c65ef-2817-4558-9639-1609416c920f"
>NOT TrainData.TrainData.Value.SBCommandIsImplemented</PreCondition></PreConditions>
<Actions>
<Action
 Guid="21600fea-3d2a-4a8c-9139-88a840203244"
>T_bs1 &lt;- 0.0</Action><Action
 Guid="8769497b-45a7-46aa-b863-da689689dad5"
>T_bs2 &lt;- 0.0</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="Default.BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="T_bs1"
 Guid="f967f8e6-aab3-4c66-892c-08bf18b8fde8"
>
<ReqRef
 Id="977790a8-3eb7-4baf-a99c-78291edbfcd3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f35f166-c40b-4574-a5de-a2385cc839fc"
>
</ReqRef><ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="095ec7f6-e9ac-4279-9266-55c3e8647a72"
>
</ReqRef><ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd090715-e366-4c25-b365-0a44ada6be09"
>
</ReqRef><Comment>Time interval used to compute d_SBI1.</Comment>
</Variable><Variable
 Type="Default.BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="290"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="T_bs2"
 Guid="1561b05c-905c-4271-846f-279dc012082d"
>
<ReqRef
 Id="88d50002-b123-41cd-8621-3ac7ae0408ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="66741b3b-0687-4ac2-9e62-3241d2df9e62"
>
</ReqRef><ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="348adf89-7166-43fe-8105-f77d17486428"
>
</ReqRef><ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0c8ca36f-3aa7-4f17-9fea-29c6d0237618"
>
</ReqRef><Comment>Time interval used to compute d_SBI2.</Comment>
</Variable><Variable
 Type="Default.BaseTypes.Time"
 DefaultValue="4.0"
 VariableMode="Internal"
 X="400"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="T_driver"
 Guid="9bfce9f1-4d0b-4c74-92b8-bf8dc511eefa"
>
<ReqRef
 Id="c7311fc7-ae05-436b-89b3-0573bdb52921"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8e8ca29d-6f8c-4172-a3e5-63d6263a2105"
>
</ReqRef><ReqRef
 Id="edd3e5bf-072e-4f5c-a2d2-0852b0d7d409"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9182221-5bdb-48ac-b8ff-6019f7b15cf9"
>
<Comment>Driver reaction time between Permitted speed supervision limit and FLOI.</Comment>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d538a7d5-d1db-44fa-a3a9-b5cd6bc4b89b"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44ce6012-e3bb-4afb-8e6b-b4e603f399cf"
>
</ReqRef><Comment>Driver reaction time between Permitted speed supervision limit and FLOI.</Comment>
</Variable><Variable
 Type="Default.BaseTypes.Time"
 DefaultValue="2.0"
 VariableMode="Internal"
 X="510"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="T_warning"
 Guid="657ed886-eeba-4c46-83e6-f4fe255fffbf"
>
<ReqRef
 Id="a61536b0-4469-4cd7-9f95-560c3bd85f7f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f501ace-b6f0-4cc4-aa04-ed3a9fa090fd"
>
</ReqRef><ReqRef
 Id="6867c1d9-cb85-4cc7-9083-5b893166fce7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f06ed6bc-c4fb-479e-9d3c-e831458c0d43"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="19dd81dd-1282-4320-b6ae-f0f1983c2604"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="14341fa2-80ec-4bd9-817d-e92c7609c003"
>
</ReqRef><Comment>Time between Warning supervision limit and FLOI.</Comment>
</Variable></Variables>
</NameSpace>
